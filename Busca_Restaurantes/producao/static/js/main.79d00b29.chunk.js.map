{"version":3,"sources":["redux/modules/restaurants.js","redux/reducers/index.js","redux/store.js","theme.js","components/Skeleton/index.jsx","components/ImageCard/index.jsx","components/RestaurantCard/styles.js","components/RestaurantCard/index.jsx","components/Modal/Portal/index.jsx","components/Modal/styles.js","components/Modal/index.jsx","components/Map/index.jsx","components/Loader/index.jsx","pages/Home/styles.js","pages/Home/index.jsx","App.js","serviceWorker.js","index.js","assets/restaurante-fake.png","assets/logo.svg"],"names":["Types","initialState","restaurants","restaurantSelected","setRestaurants","type","payload","setRestaurant","restaurant","combineReducers","state","action","store","createStore","rootReducer","theme","colors","primary","background","text","success","fonts","regular","KeyFrameLoading","keyframes","LoadingSkeleton","styled","div","props","width","height","Card","photo","Title","span","ImageCard","title","useState","imageLoaded","setImageLoaded","useEffect","imageLoader","Image","src","onload","Skeleton","Restaurant","RestaurantInfo","Address","RestaurantPhoto","img","RestaurantCard","onClick","name","count","value","rating","edit","isHalf","activeColor","vicinity","formatted_address","photos","getUrl","restaurante","onLoad","alt","PortalModal","children","portal","document","getElementById","ReactDOM","createPortal","Overlay","Dialog","Modal","open","onClose","onEsc","e","keyCode","window","addEventListener","removeEventListener","Portal","stopPropagation","GoogleApiWrapper","apiKey","process","language","dispatch","useDispatch","useSelector","map","setMap","google","query","placeId","onMapReady","_","center","service","maps","places","PlacesService","request","location","radius","nearbySearch","results","status","PlacesServiceStatus","OK","console","log","searchNearby","textSearch","searchByQuery","fields","getDetails","place","getRestaurantById","centerAroundCurrentLocation","onReady","onRecenter","Key","place_id","position","lat","geometry","lng","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","Wrapper","Container","aside","Search","section","Logo","Carousel","Slider","CarouselTitle","h1","ModalTitle","p","ModalContent","Home","inputValue","setInputValue","setQuery","setplaceId","modalOpened","setModalOpened","settings","dots","infinite","speed","slidesToShow","slidesToScroll","adaptiveHeight","logo","label","outlined","trailingIcon","role","icon","onKeyPress","key","onChange","target","length","Loader","handleOpenModal","Map","formatted_phone_number","opening_hours","open_now","App","Boolean","hostname","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.79d00b29.chunk.js","sourcesContent":["export const Types = {\r\n    SET_RESTAURANTS: 'restaurants/SET_RESTAURANTS',\r\n    SET_RESTAURANT: 'restaurants/SET_RESTAURANT',\r\n}\r\n\r\nconst initialState = {\r\n    restaurants: [],\r\n    restaurantSelected: null,\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.SET_RESTAURANTS:\r\n            return { ...state, restaurants: action.payload };\r\n        case Types.SET_RESTAURANT:\r\n            return { ...state, restaurantSelected: action.payload };   \r\n        default:\r\n            return state;\r\n    }    \r\n};\r\n\r\nexport function setRestaurants(restaurants) {\r\n    return {\r\n        type: Types.SET_RESTAURANTS,\r\n        payload: restaurants,\r\n    };\r\n}\r\n\r\nexport function setRestaurant(restaurant) {\r\n    return {\r\n        type: Types.SET_RESTAURANT,\r\n        payload: restaurant,\r\n    };\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport restaurants from '../modules/restaurants';\r\n\r\nexport default combineReducers({\r\n    restaurants,\r\n})","import { createStore } from 'redux';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","const theme = {\r\n    colors: {\r\n        primary: '#6200ee',\r\n        background: '#00000014',\r\n        text: '#000000B3',\r\n        success: '#135E01',\r\n    },\r\n    fonts: {\r\n        regular: 'Roboto, sans-serif',\r\n    },\r\n};\r\n\r\nexport default theme;","import React from 'react';\r\nimport styled, { keyframes} from 'styled-components';\r\n\r\nconst KeyFrameLoading = keyframes`\r\n  0% {\r\n    opacity: 0.5;\r\n  }\r\n  100% {\r\n    opacity:1;\r\n  }\r\n`;\r\n\r\nconst LoadingSkeleton = styled.div`\r\n  background-color: gray;\r\n  border-radius: 6px;\r\n  margin-bottom: 10px;\r\n  min-width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  animation: ${KeyFrameLoading} 500ms infinite alternate;\r\n`;\r\n\r\nexport default ({ width, height }) => <LoadingSkeleton width={width} height={height} />;","import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nimport Skeleton from '../Skeleton';\r\n\r\nconst Card = styled.div`\r\n  min-width: 90px;\r\n  height: 90px;\r\n  border-radius: 8px;\r\n  background-image: url(${(props) => props.photo}); \r\n  background-size: cover;\r\n  p {\r\n    margin-left: 6px;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ImageCard = ({ photo, title }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const imageLoader = new Image();\r\n    imageLoader.src = photo;\r\n    imageLoader.onload = () => setImageLoaded(true);\r\n  }, [photo]);\r\n\r\n  return (\r\n    <>\r\n      {imageLoaded ? (\r\n        <Card photo={photo}>\r\n          <Title>{title}</Title>\r\n        </ Card>\r\n      ) : (\r\n        <Skeleton width=\"90px\" height=\"90px\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageCard;","import styled from \"styled-components\";\r\n\r\nexport const Restaurant = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  margin-top: 5px;\r\n  padding: 16px;\r\n  background-color: #ffffff;\r\n  border-left: 5px solid transparent;\r\n  :hover {\r\n      background-color: ${(props) => props.theme.colors.background};\r\n      border-left-color: ${(props) => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nexport const RestaurantInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 29px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Address = styled.span`\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  line-height: 19px;\r\n  margin-bottom: 10px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const RestaurantPhoto = styled.img`\r\n  weidth: 100px;\r\n  heigth: 100px;\r\n  object-fit: cover;\r\n  border-radius: 6px;\r\n  display: ${(props) => (props.imageLoaded ? 'block' : 'none')};  \r\n`;","import React, { useState } from \"react\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nimport restaurante from \"../../assets/restaurante-fake.png\";\r\nimport Skeleton from '../Skeleton';\r\n\r\nimport { Restaurant, RestaurantInfo, RestaurantPhoto, Title, Address } from './styles';\r\n\r\nconst RestaurantCard = ({ restaurant, onClick }) => {\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n  return(\r\n    <Restaurant onClick={onClick}>\r\n      <RestaurantInfo>\r\n        <Title>{restaurant.name}</Title>\r\n        <ReactStars count={5} value={restaurant.rating} edit={false} isHalf activeColor=\"#e7711c\" />\r\n        <Address>{restaurant.vicinity || restaurant.formatted_address}</Address>\r\n      </RestaurantInfo>\r\n      <RestaurantPhoto\r\n        imageLoaded={imageLoaded}\r\n        src={restaurant.photos ? restaurant.photos[0].getUrl() : restaurante} \r\n        onLoad={() => setImageLoaded(true)}\r\n        alt=\"Foto do Restaurante\"\r\n        width=\"150px\" height=\"150px\" \r\n      />\r\n      {!imageLoaded && <Skeleton width=\"100px\" height=\"100px\" />}\r\n    </Restaurant>\r\n  );\r\n};  \r\n\r\nexport default RestaurantCard;","import ReactDOM from 'react-dom';\r\n\r\nconst PortalModal = ({ children }) => {\r\n    const portal = document.getElementById('modal-root');\r\n    return ReactDOM.createPortal(children, portal);\r\n};\r\n\r\nexport default PortalModal;","import styled from 'styled-components';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  background-color: rgba(78, 89, 131, 0.5);\r\n  backdrop-filter: blur(5px);\r\n\r\n  z-index: 999;\r\n`;\r\n\r\nexport const Dialog = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  max-height: calc(100% - 144px);\r\n  width: 500px;\r\n  padding: 24px;\r\n  background-color: #ffffff;\r\n  box-shadow: 0px 0px 32px rgba(78, 89, 131, 0.2);\r\n  border-radius: 8px;\r\n`;\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\n\r\nimport Portal from './Portal';\r\nimport { Overlay, Dialog } from './styles';\r\n\r\nconst Modal = ({ children, open, onClose}) => {\r\n  useEffect(() => {\r\n    function onEsc(e){\r\n      if (e.keyCode === 27) onClose();\r\n    }\r\n    window.addEventListener('keydown', onEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', onEsc);\r\n    };\r\n  }, [onClose]);  \r\n\r\n  if (!open) return null;\r\n\r\n  function onOverlayClick(){\r\n    onClose();\r\n  }\r\n\r\n  function OnDialogClick(e) {\r\n    e.stopPropagation(); \r\n  }\r\n\r\n  return (\r\n    <Portal>\r\n      <Overlay onClick={onOverlayClick}>\r\n        <Dialog onClick={OnDialogClick}>{children}</Dialog>\r\n      </Overlay>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default Modal;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GoogleApiWrapper, Map, Marker } from 'google-maps-react';\r\n\r\nimport { setRestaurants, setRestaurant } from '../../redux/modules/restaurants';\r\n\r\nexport const MapContainer = (props) => {\r\n    const dispatch = useDispatch();\r\n    const { restaurants } = useSelector((state) => state.restaurants);\r\n    const [map, setMap] = useState(null);\r\n    const { google, query, placeId } = props;\r\n\r\n    useEffect(() => {\r\n        if (query) {\r\n            searchByQuery(query);\r\n        }\r\n    }, [query]);\r\n\r\n    useEffect(() => {\r\n        if (placeId) {\r\n            getRestaurantById(placeId);\r\n        }\r\n    }, [placeId]);    \r\n\r\n    function getRestaurantById(placeId) {\r\n        const service = new google.maps.places.PlacesService(map);\r\n        dispatch(setRestaurant(null));\r\n\r\n        const request = {\r\n            placeId,\r\n            fields: ['name', 'opening_hours', 'formatted_address','formatted_phone_number'],            \r\n        };\r\n        \r\n        service.getDetails(request, (place, status) => {\r\n            if (status === google.maps.places.PlacesServiceStatus.OK) {              \r\n                dispatch(setRestaurant(place));\r\n            }\r\n        });        \r\n    }\r\n\r\n    function searchByQuery(query) {\r\n        const service = new google.maps.places.PlacesService(map);\r\n        dispatch(setRestaurants([]));\r\n\r\n        const request = {\r\n            location: map.center,\r\n            radius: '200',\r\n            type: ['restaurant'],\r\n            query,\r\n        };\r\n        \r\n        service.textSearch(request, (results, status) => {\r\n            if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n                console.log('restaurants>>>', results);\r\n                dispatch(setRestaurants(results));\r\n            }\r\n        });        \r\n    }\r\n\r\n    function searchNearby(map, center) {\r\n        const service = new google.maps.places.PlacesService(map);\r\n        dispatch(setRestaurants([]));\r\n\r\n        const request = {\r\n            location: center,\r\n            radius: '20000',\r\n            type: ['restaurant'],\r\n        }\r\n        \r\n        service.nearbySearch(request, (results, status) => {\r\n            if (status === google.maps.places.PlacesServiceStatus.OK) {\r\n                console.log('restaurants>>>', results);\r\n                dispatch(setRestaurants(results));\r\n            }\r\n        });\r\n    }\r\n \r\n    function onMapReady(_, map) {\r\n        setMap(map);\r\n        searchNearby(map, map.center);        \r\n    }\r\n\r\n    return (\r\n        <Map \r\n            google={google} \r\n            centerAroundCurrentLocation \r\n            onReady={onMapReady} \r\n            onRecenter={onMapReady}\r\n            {...props}>\r\n            {restaurants.map((restaurant) => (\r\n                <Marker \r\n                    Key={restaurant.place_id} \r\n                    name={restaurant.name} \r\n                    position={{\r\n                        lat: restaurant.geometry.location.lat(),\r\n                        lng: restaurant.geometry.location.lng(),\r\n                    }} \r\n                />\r\n            ))}            \r\n        </Map>\r\n    );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n      apiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n      language: 'pt-BR', \r\n})(MapContainer);","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from '../../assets/restaurants-loading.json';\r\n\r\nexport default () => {\r\n  const defaultOptions = {\r\n      loop: true,\r\n      autoplay: true,\r\n      animationData,\r\n      rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice',\r\n      },\r\n   };\r\n\r\n   return <Lottie options={defaultOptions} />;\r\n};","import styled from \"styled-components\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nexport const Container = styled.aside`\r\n    background-color: ${(props) => props.theme.colors.background};\r\n    width: 360px;\r\n    height: 100vh;\r\n    overflow-y: auto;\r\n`;\r\n\r\nexport const Search = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background-color: #ffffff;\r\n    padding: 16px;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  margin: 10px;\r\n`;\r\n\r\nexport const Map = styled.div`\r\n  background-color: red;\r\n  width: 500px;\r\n`;\r\n\r\nexport const Carousel = styled(Slider)`\r\n  .slick-slide {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nexport const CarouselTitle = styled.h1`\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 29px;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const ModalTitle = styled.p`\r\n  margin-bottom: 10px;\r\n  letter-spacing: 0.11px;\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  line-height: 29px;\r\n`;\r\n\r\nexport const ModalContent = styled.p`\r\n  margin-bottom: 10px;\r\n  font-family: ${(props) => props.theme.fonts.regular};\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  line-height: 19px;\r\n`;","import React, { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport TextField, { Input } from '@material/react-text-field/dist/index';\r\nimport MaterialIcon from '@material/react-material-icon';\r\n\r\nimport logo from '../../assets/logo.svg';\r\nimport restaurante from '../../assets/restaurante-fake.png';\r\nimport { Card, RestaurantCard, Modal, Map, Loader, Skeleton } from '../../components';\r\n\r\nimport { Container, Carousel, Search, Logo, Wrapper, CarouselTitle, ModalTitle, ModalContent } from './styles';\r\n\r\nconst Home = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [query, setQuery] = useState(null);\r\n    const [placeId, setplaceId] = useState(null);\r\n    const [modalOpened, setModalOpened] = useState(false);\r\n    const { restaurants, restaurantSelected } = useSelector((state) => state.restaurants);\r\n   \r\n    const settings = {\r\n      dots: false,\r\n      infinite: true,\r\n      autoplay: true,\r\n      speed: 300,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 4,\r\n      adaptiveHeight: true,\r\n    };\r\n\r\n    function handleKeyPress(e) {\r\n      //if (e.charCode === 13) {\r\n      if (e.key === 'Enter') {\r\n        setQuery(inputValue);\r\n      }\r\n    }\r\n\r\n    function handleOpenModal(placeId) {\r\n      setplaceId(placeId);\r\n      setModalOpened(true);\r\n    }    \r\n\r\n    return(\r\n      <Wrapper>\r\n        <Container>\r\n          <Search>\r\n            <Logo src={logo} alt=\"Logo do Restaurante\" />\r\n              <TextField\r\n                label=\"Pesquisar Restaurantes\"\r\n                outlined\r\n                trailingIcon={<MaterialIcon role=\"button\" icon=\"search\" />}>\r\n                <Input \r\n                  value={inputValue} \r\n                  onKeyPress={handleKeyPress}                 \r\n                  onChange={(e) => setInputValue(e.target.value)} \r\n                />\r\n              </TextField>\r\n              {restaurants.length > 0 ? (\r\n                <>\r\n                  <CarouselTitle>Na sua Área</CarouselTitle>\r\n                  <Carousel {...settings}>               \r\n                  {restaurants.map((restaurant) => (\r\n                      <Card \r\n                        Key={restaurant.place_id} \r\n                        photo={restaurant.photos ? restaurant.photos[0].getUrl() : restaurante}\r\n                        title={restaurant.name}\r\n                      />\r\n                    ))}\r\n                  </Carousel>\r\n                </>\r\n              ) : (\r\n                <Loader />\r\n              )}\r\n          </Search>\r\n          {restaurants.map((restaurant) => (\r\n            <RestaurantCard \r\n              onClick={() => handleOpenModal(restaurant.place_id)} \r\n              restaurant={restaurant} \r\n            />\r\n          ))}\r\n        </Container>\r\n        <Map query={query} placeId={placeId} />\r\n        <Modal open={modalOpened} onClose={() => setModalOpened(!modalOpened)}>\r\n          {restaurantSelected ? (\r\n            <>\r\n              <ModalTitle>{restaurantSelected?.name}</ModalTitle>\r\n              <ModalContent>{restaurantSelected?.formatted_phone_number}</ModalContent>\r\n              <ModalContent>{restaurantSelected?.formatted_address}</ModalContent>\r\n              <ModalContent>\r\n                {restaurantSelected?.opening_hours?.open_now\r\n                  ? 'Aberto Agora :-)' \r\n                  : 'Fechado nesse momento :-('}\r\n              </ModalContent>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Skeleton width=\"10px\" height=\"10px\" />\r\n              <Skeleton width=\"10px\" height=\"10px\" />\r\n              <Skeleton width=\"10px\" height=\"10px\" />\r\n              <Skeleton width=\"10px\" height=\"10px\" />\r\n            </>\r\n          )}\r\n        </Modal> \r\n      </Wrapper>\r\n    );\r\n};                    \r\n\r\nexport default Home;","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { Reset } from 'styled-reset';\r\n\r\nimport store from './redux/store';\r\nimport theme from './theme';\r\nimport Home from './pages/Home';\r\n\r\nfunction App() {  \r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <Reset />\r\n        <Home />\r\n      </ThemeProvider>    \r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@material/react-text-field/dist/text-field.css';\r\nimport '@material/react-material-icon/dist/material-icon.css';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/restaurante-fake.cd9dc0a0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.8f076e44.svg\";"],"sourceRoot":""}